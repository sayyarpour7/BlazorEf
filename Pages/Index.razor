@page "/"

@using BlazorEf.Data
@using BlazorEf.Pages.Components
@inject ApplicationDbContext  applicationDbContext
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
<NavLink href="/Person/create" class="btn btn-primary">ایجاد شخص</NavLink>

@if (pesrsons == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Age </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var p in pesrsons)
            {
                <tr>

                    <td>@p.Id</td>

                    <td>@p.FirstName</td>
                    <td>@p.LastName</td>
                    <td>@p.Age</td>
                    <td>
                        <NavLink href="@($"Person/edit/{p.Id}")" class="btn btn-primary">Edit</NavLink>
                    </td>
                    <td>
                        <button @onclick="@(()=>HandelDeletePerson(p.Id))" class="btn btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button @onclick="@(()=>TestSuccess("Success Message"))" class="btn btn-danger">Test Toastr</button>
    <MyMessageBox @ref="myMessageBox"
                  Title="تاییده "
                  OnCancel="OnCancelMsgBoxClicked"
                  OnConfirm="OnConfirmMsgBoxClicked">
        <div>
            آیا می خواهید این رکورد را حذف کنید؟
        </div>
    </MyMessageBox>
}

@code {
    private List<Person> pesrsons;
    private MyMessageBox myMessageBox;
    private int DeletedId = -1;
    protected override void OnInitialized()
    {
        pesrsons = applicationDbContext.Persons.ToList();
    }
    protected void HandelDeletePerson(int Id)
    {
        DeletedId = Id;

        //
        myMessageBox.Show();

    }
    private void OnCancelMsgBoxClicked()
    {
        //  myMessageBox.Hide();
    }
    private async void OnConfirmMsgBoxClicked()
    {
        if (DeletedId == -1)
        {
            return;
        }
        Person person = applicationDbContext.Persons.Find(DeletedId);
        applicationDbContext.Persons.Remove(person);

        applicationDbContext.SaveChanges();

        pesrsons = applicationDbContext.Persons.ToList();

        await jsRuntime.InvokeVoidAsync("ShowToastr", "success", $"The { person.FirstName} deleted successfully.");
    }
    async Task TestSuccess(string message)
    {
        await jsRuntime.InvokeVoidAsync("ShowToastr", "success", message);
    }

}
