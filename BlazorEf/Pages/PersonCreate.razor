@page "/Person/create"
@page "/Person/edit/{Id:int}"

@inject ApplicationDbContext  applicationDbContext
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title اشخاص</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="person" OnValidSubmit="HandlePersonUpsert">
                    <DataAnnotationsValidator />
                    <div class="form-group">
                        @*<DisplayLable TItem="Person" aspfor="@nameof(Person.FirstName)"></DisplayLable>*@
                        @*<label>@myCaptiin</label>*@

                        <label> @(utils.MyHelper.GetDisplayName<Person>(nameof(person.FirstName)))</label>



                        <InputText @bind-Value="person.FirstName" class="form-control"></InputText>
                        <ValidationMessage For="()=>person.FirstName"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label> @(utils.MyHelper.GetDisplayName<Person>(nameof(person.LastName)))</label>
                        <InputText @bind-Value="person.LastName" class="form-control"></InputText>
                        <ValidationMessage For="()=>person.LastName"></ValidationMessage>
                    </div>

                    <div class="form-group">
                        <label> @(utils.MyHelper.GetDisplayName<Person>(nameof(person.CityId)))</label>
                        <InputSelect id="City" @bind-Value="person.CityId" class="form-control">
                            @foreach (var city in Citys)
                            {
                                <option value="@city.Id">@city.CityTitle</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="form-group">
                        <label> @(utils.MyHelper.GetDisplayName<Person>(nameof(person.BirthDate)))</label>
                        <DntInputPersianDate @bind-Value="person.BirthDate"
                                             LabelName=""
                                             FieldIcon="bi-calendar"
                                             ShowCalendarOnFocus="true"
                                             BeginningOfCentury="1400"
                                             CalendarFromYear="1350"
                                             CalendarToYear="1450"
                                             UsePersianNumbers="true"
                                             CalendarShowHolidays="true"
                                             CalendarShowTodayButton="true"
                                             CalendarUseShortPersianDayNamesOfWeek="false"
                                             class="form-control" />

                        <ValidationMessage For="()=>person.BirthDate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label> @(utils.MyHelper.GetDisplayName<Person>(nameof(person.Price)))</label>
                        <DntInputCurrency @bind-Value="@person.Price"
                                          LabelName=""
                                          FieldIcon="bi-currency-exchange"
                                          UsePersianNumbers="true"
                                          ShowNumberToText="true"
                                          NumberToTextLanguage="@Language.Persian"
                                          class="form-control" />
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary">ثبت </button>
                        <NavLink href="/" class="btn btn-secondary">بازگشت </NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code
{
    private string myCaptiin;
    private Person person;
    private List<BlazorEf.Data.City> Citys;
    private string Title = "ایجاد";
    [Parameter] public int? Id { get; set; }
    protected override void OnInitialized()

    {
        myCaptiin = utils.MyHelper.GetDisplayName<Person>("FirstName");
        Citys = applicationDbContext.City.ToList();
        if (Id.HasValue)
        {
            // Update Mode
            Title = "تغییر";
            person = applicationDbContext.Persons.Where(p => p.Id == Id).Single();
        }
        else
        {
            // Create Mode
            Title = "ایجاد";
            person = new Person();
        }
    }


    private async void HandlePersonUpsert()
    {
        if (Id.HasValue)
            applicationDbContext.Persons.Update(person);
        else
            applicationDbContext.Persons.Add(person);

        await applicationDbContext.SaveChangesAsync();
        await jsRuntime.InvokeVoidAsync("ShowToastr", "success", $"The {Title} Command Run  successfully.");
        navigationManager.NavigateTo("/");
    }
}